matrix:
  include:
    - os: osx
      osx_image: xcode11.3
      language: node_js
      node_js: "12"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
        - ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true
        - CSC_IDENTITY_AUTO_DISCOVERY=false

    - os: linux
      services: docker
      language: node_js
      node_js: "12"
      env:
        - ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true

notifications:
  email: false

branches:
  only:
    - /^release\/.*$/

git:
  depth: 3
  quiet: true

cache:
  yarn: true
  directories:
    - angular/node_modules
    - electron/node_modules

before_script:
  - cd angular && npm install yarn && yarn install
  - yarn build-prod
  - cd ../electron && npm install yarn && yarn install

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      ENVS=`env | grep -iE '(DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_)' | sed -n '/^[^\t]/s/=.*//p' | sed '/^$/d' | sed 's/^/-e /g' | tr '\n' ' '`
      docker run $ENVS --rm \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "node -v && npm ci && npm run cilinux"
    else
      npm run cidarwin
    fi

before_deploy:
  - cd .. && ls

deploy:
  provider: releases
  api_key: $TOKEN
  file: "electron/output/*"
  overwrite: true
  prerelease: true
  skip_cleanup: true
  on:
    tags: false
    all_branches: true
